// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Test.pb.h"

@implementation TestRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [TestRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Test ()
@property (retain) NSString* name;
@property Float64 longtitude;
@property Float64 latitude;
@property (retain) NSString* description;
@end

@implementation Test

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasLongtitude {
  return !!hasLongtitude_;
}
- (void) setHasLongtitude:(BOOL) value {
  hasLongtitude_ = !!value;
}
@synthesize longtitude;
- (BOOL) hasLatitude {
  return !!hasLatitude_;
}
- (void) setHasLatitude:(BOOL) value {
  hasLatitude_ = !!value;
}
@synthesize latitude;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value {
  hasDescription_ = !!value;
}
@synthesize description;
- (void) dealloc {
  self.name = nil;
  self.description = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.longtitude = 0;
    self.latitude = 0;
    self.description = @"";
  }
  return self;
}
static Test* defaultTestInstance = nil;
+ (void) initialize {
  if (self == [Test class]) {
    defaultTestInstance = [[Test alloc] init];
  }
}
+ (Test*) defaultInstance {
  return defaultTestInstance;
}
- (Test*) defaultInstance {
  return defaultTestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasLongtitude) {
    [output writeDouble:2 value:self.longtitude];
  }
  if (self.hasLatitude) {
    [output writeDouble:3 value:self.latitude];
  }
  if (self.hasDescription) {
    [output writeString:4 value:self.description];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasLongtitude) {
    size += computeDoubleSize(2, self.longtitude);
  }
  if (self.hasLatitude) {
    size += computeDoubleSize(3, self.latitude);
  }
  if (self.hasDescription) {
    size += computeStringSize(4, self.description);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Test*) parseFromData:(NSData*) data {
  return (Test*)[[[Test builder] mergeFromData:data] build];
}
+ (Test*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Test*)[[[Test builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Test*) parseFromInputStream:(NSInputStream*) input {
  return (Test*)[[[Test builder] mergeFromInputStream:input] build];
}
+ (Test*) parseDelimitedFromInputStream:(NSInputStream*) input {
  return (Test*)[[[Test builder] mergeDelimitedFromInputStream:input] build];
}
+ (Test*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Test*)[[[Test builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Test*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Test*)[[[Test builder] mergeFromCodedInputStream:input] build];
}
+ (Test*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Test*)[[[Test builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Test_Builder*) builder {
  return [[[Test_Builder alloc] init] autorelease];
}
+ (Test_Builder*) builderWithPrototype:(Test*) prototype {
  return [[Test builder] mergeFrom:prototype];
}
- (Test_Builder*) builder {
  return [Test builder];
}
@end

@interface Test_Builder()
@property (retain) Test* result;
@end

@implementation Test_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Test alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Test_Builder*) clear {
  self.result = [[[Test alloc] init] autorelease];
  return self;
}
- (Test_Builder*) clone {
  return [Test builderWithPrototype:result];
}
- (Test*) defaultInstance {
  return [Test defaultInstance];
}
- (Test*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Test*) buildPartial {
  Test* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Test_Builder*) mergeFrom:(Test*) other {
  if (other == [Test defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasLongtitude) {
    [self setLongtitude:other.longtitude];
  }
  if (other.hasLatitude) {
    [self setLatitude:other.latitude];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Test_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Test_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 17: {
        [self setLongtitude:[input readDouble]];
        break;
      }
      case 25: {
        [self setLatitude:[input readDouble]];
        break;
      }
      case 34: {
        [self setDescription:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (Test_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (Test_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasLongtitude {
  return result.hasLongtitude;
}
- (Float64) longtitude {
  return result.longtitude;
}
- (Test_Builder*) setLongtitude:(Float64) value {
  result.hasLongtitude = YES;
  result.longtitude = value;
  return self;
}
- (Test_Builder*) clearLongtitude {
  result.hasLongtitude = NO;
  result.longtitude = 0;
  return self;
}
- (BOOL) hasLatitude {
  return result.hasLatitude;
}
- (Float64) latitude {
  return result.latitude;
}
- (Test_Builder*) setLatitude:(Float64) value {
  result.hasLatitude = YES;
  result.latitude = value;
  return self;
}
- (Test_Builder*) clearLatitude {
  result.hasLatitude = NO;
  result.latitude = 0;
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (Test_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (Test_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
@end

